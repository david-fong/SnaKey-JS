/* Default color scheme: */
:root {
  --dfLines:    #3f5e77;
  --dfTileBg:   #2e3b48;
  --dfTileFg:   #aebde2;
  --dfTarget:   #5cc679;
  --dfPlayer:   #2fc2e0;
  --dfTrailBg:  #3f7ba3;
  --dfTrailFg:  #182028;
  --dfChaser:   #ff75ce;
  --dfNommer:   #2aa8f7;
  --dfRunner:   #ffdb3f;
  
  /* --width: _; <- declared in game.js */
  --myFont:     bold 90% Consolas;
  --gridDmn:    85vmin;
  --tileHt:     calc(var(--gridDmn) / var(--width) - 0.3vmin);
  
  --myPauseAnimation: myPause 0.5s ease-in-out 0s infinite alternate-reverse both paused;
}
@keyframes myPause {
  from {filter: grayscale(0%)   brightness(100%); }
  to   {filter: grayscale(100%) brightness(130%); }
}
body {
  animation:        var(--myPauseAnimation);
  font:             var(--myFont);
  color:            black;
}
.background {
  box-sizing:       border-box;
  height:           100%;
  width:            100%;
  
  z-index:          -1;
  position:         fixed;
  
  background-color: var(--lines, --dfLines);
}
.vBars {
  padding:          10px;
  display:          grid;
  grid-template-columns: 20% 60% 20%;
}
.hBars {
  display:          flex;
  flex-direction:   column;
  justify-content:  stretch;
  align-items:      center;
}

table {
  border-spacing:   0.5vmin;
  table-layout:     fixed;
  
  empty-cells:      show;
  cursor:           arrow;
  user-select:      none;
  
  text-overflow:    clip;
  white-space:      nowrap;
  text-align:       center;
}
td {
  padding:          0px;
}


/* Base-formatting for tiles inside .grid */
.grid div {
  overflow-x:       hidden;
  overflow-y:       hidden;
  vertical-align:   middle;
  
  border-radius:    14%;
  height:           var(--tileHt);
  width:            var(--tileHt);
  font-size:        calc(var(--tileHt) * 0.8);
}


.tBar, .bBar       { height: 5vmin;            }
.hBarItem:disabled { filter: brightness(80%);  }
.hBarItem:hover    { filter: brightness(115%); }
.hBarItem {
  width:            8em;
  border:           none;
  border-radius:    0.3em;
  
  cursor:           pointer;
  font:             inherit;
}



/* Coloring for tiles */
.tile, .hBarItem { 
          background-color: var(--tileBg,  --dfTileBg);
          color:            var(--tileFg,  --dfTileFg);  }
.target { background-color: var(--target,  --dfTarget);  }
.player { background-color: var(--player,  --dfPlayer);  }
.trail  { background-color: var(--trailBg, --dfTrailBg);
          color:            var(--trailFg, --dfTrailBg); }
.chaser { background-color: var(--chaser,  --cfChaser);  }
.nommer { background-color: var(--nommer,  --dfNommer);  }
.runner { background-color: var(--runner,  --dfRunner);  }

/* Rotates faces right-side up (I don't like it):
.grid td [class$='er'] {
  transform: rotate(90deg);
}
*/
