/* GENERAL */
body {
  font:             90% Trebuchet MS;
  text-align:       center;
  color:            black;
  transition:       filter 0.5s ease-in-out;
  user-select:      none;
}
[data-paused] {
  filter:           grayscale(100%) brightness(130%) contrast(60%);
}
.background {
  height:           100%;
  width:            100%;
  position:         fixed;
  top:              0px;
  left:             0px;
  z-index:          -1;
  background-color: var(--lines);
}
.vBars {
  padding:          10px;
  display:          flex;
  justify-content:  space-between;
  align-content:    flex-start;
  flex-flow:        row wrap;
  
  /* This helps to cover white spaces that
   * somehow only appear when the game is paused:
   */
  background-color: var(--lines);
}
#scoringBar { order: 2; }
#optionsBar { order: 0; }
#gameBar    { order: 1; }
/* Move menu bars under grid 
 * when aspect ratio decreases. */
@media (max-aspect-ratio: 4/3) {
  #scoringBar { order: 2; }
  #optionsBar { order: 1; }
  #gameBar    { order: 0; }
  body .menubar { flex-basis: 49%; }
}



/* MENUBARS */
.menubar {
  height:           100%;
  flex-basis:       15%;
  display:          flex;
  flex-direction:   column;
}
.menuItem:disabled { filter: brightness(80%);  }
.menuItem:hover    { filter: brightness(115%); }
.menuItem {
  box-sizing:       border-box;
  margin:           2.5px;
  width:            100%;
  flex-basis:       5vh;
  
  border:           none;
  border-radius:    0.3em;
  
  /* center inner content */
  display:          flex;
  align-items:      center;
  justify-content:  center;
  
  cursor:           pointer;
  font:             inherit;
}
select > option {
  background-color: red;
}
.tutorial {
  flex-basis:       20vh;
}
.tutorial > div {
  width:            85%;
  display:          none;
  text-overflow:    clip;
  white-space:      pre-wrap;
}
.progress {
  color:            black;
  justify-content:  flex-start;
}
.scoreTag span::before { content: attr(data-player) }



/* GRID & TILES */
.grid {
/*--width-in-tiles: ; <- declared in game.js */
  --tileHt:         calc((93vmin - 20px) / var(--width-in-tiles));
  
  table-layout:     fixed; /* helps with rendering speed */
  font-size:        calc(var(--tileHt) * 0.800);
  border-spacing:   calc(var(--tileHt) * 0.085);
}
/* Tile Shape/Form */
.grid td, .menuItem {
  position:         relative;
  padding:          0px;
  overflow-x:       hidden;
  overflow-y:       hidden;
}
.grid td {
  height:           calc(var(--tileHt) * 0.97);
  width:            calc(var(--tileHt) * 0.97);
  background:       rgba(0,0,0,0);
  backface-visibility: hidden;
}
/* Tile Coloring */
.grid td div {
  height:           100%;
  width:            100%;
}
.grid td:hover > div {
  transform:        rotateY(180deg);
}
.grid td > div {
  border-radius:    15%;
  transition:       transform 0.35s ease-in-out;
  transform-style:  preserve-3d;
}
/* Tile Text */
.grid td > div > div {
  position:             absolute;
  backface-visibility:  hidden;
  
  transition:           opacity, filter;
  transition-duration:  0.40s;
  transition-timing-function: cubic-bezier(.25,.8,.45,1)
}
.grid td > div > .front {
  z-index:          2;
}
.grid td > div > .back {
  transform:        rotateY(180deg);
}



/* TILE COLORING */
.tile, .menuItem {
          background-color: var(--tileBg);
          color:            var(--tileFg);  }
.target { background-color: var(--target);  }
.corrupt {background-color: var(--tileBg);  
          opacity:          0.65;           }
.player { background-color: var(--player);  }
.trail  { background-color: var(--trailBg);
          color:            var(--trailFg); }
.chaser { background-color: var(--chaser);  }
.nommer { background-color: var(--nommer);  }
.runner { background-color: var(--runner);  }

/* adds an outline to characters: */
.grid td [class$='er'], .target {
  box-shadow: 0 0 0px 0.08em white inset;
}
.trail, .target, .corrupt {
  transition-property:      background-color, color, opacity;
  transition-duration:      0.65s;
  transition-timing-function: ease;
}

