/* GENERAL */
body {
  font:             90% Trebuchet MS;
  text-align:       center;
  color:            black;
  transition:       filter 0.5s ease-in-out;
  user-select:      none;
}
body[data-paused] {
  filter:           grayscale(  100%) 
                    brightness( 130%) 
                    contrast(    60%);
}
.background {
  height:           100%;
  width:            100%;
  position:         fixed;
  z-index:          -1;
  background-color: var(--lines);
}
.vBars {
  padding:          10px;
  display:          flex;
  justify-content:  space-between;
  align-content:    flex-start;
  flex-flow:        row wrap;
  
  /* This helps to cover white spaces that
   * somehow only appear when the game is paused:
   */
  background-color: var(--lines);
}
#scoringBar { order: 2; }
#optionsBar { order: 0; }
#gameBar    { order: 1; }
/* Move menu bars under grid 
 * when aspect ratio decreases. */
@media (max-aspect-ratio: 4/3) {
  #scoringBar { order: 2; }
  #optionsBar { order: 1; }
  #gameBar    { order: 0; }
  body .menubar { flex-basis: 49%; }
}



/* MENUBARS */
.menubar {
  height:           100%;
  flex-basis:       15%;
  display:          flex;
  flex-direction:   column;
}
.menuItem:disabled { filter: brightness(80%);  }
.menuItem:hover    { filter: brightness(115%); }
.menuItem {
  box-sizing:       border-box;
  margin:           2.5px;
  width:            100%;
  flex-basis:       5vh;
  
  border:           none;
  border-radius:    0.3em;
  
  /* center inner content */
  display:          flex;
  align-items:      center;
  justify-content:  center;
  
  cursor:           pointer;
  font:             inherit;
}
.tutorial {
  flex-basis:       20vh;
}
.tutorial > div {
  width:            85%;
  display:          none;
  text-overflow:    clip;
  white-space:      pre-wrap;
}
.progress {
  color:            black;
  justify-content:  flex-start;
}
.scoreTag span::before { content: attr(data-player) }



/* GRID & TILES */
.grid {
/*--width-in-tiles: ; <- declared in game.js */
  --tileHt:         calc((93vmin - 20px) / var(--width-in-tiles));
  
  table-layout:     fixed; /* helps with rendering speed */
  font-size:        calc(var(--tileHt) * 0.800);
  border-spacing:   calc(var(--tileHt) * 0.085);
}
/* Tile Shape/Form */
.tileForm, .menuItem {
  position:         relative;
  padding:          0px;
  overflow-x:       hidden;
  overflow-y:       hidden;
}
.tileForm {
  height:           calc(var(--tileHt) * 0.97);
  width:            calc(var(--tileHt) * 0.97);
  background-color: var(--tileBg);
}
.tileForm, .tileFace {
  border-radius:    15%;
}
.tileFace {
  box-shadow:       inherit;
}
.tileFace, .tileText {
  height:           100%;
  width:            100%;
}
/* Tile Text */
.tileFace > .tileText {
  position:             absolute;
  transition:           opacity, filter;
  transition-duration:  0.40s;
  transition-timing-function: cubic-bezier(.25,.8,.45,1);
}
.tileFace       > .mouseOverText { visibility: hidden; }
.tileFace:hover > .mouseOverText { visibility: visible; }
.tileFace:hover > .mouseOffText  { visibility: hidden; }



/* TILE FACE COLORING */
.tileForm[data-type=tile]   > .tileFace, .menuItem { 
                                          background-color: var(--tileBg);
                                          color:            var(--tileFg); }
.tileForm[data-type=target] > .tileFace { background-color: var(--target); }
.tileForm[data-type=corrupt]> .tileFace { background-color: var(--tileBg);  
                                          opacity:          0.65;          }
.tileForm[data-type=player] > .tileFace { background-color: var(--player); }
.tileForm[data-trail]       > .tileFace { background-color: var(--trailBg);
                                          color:            var(--trailFg); }
.tileForm[data-type=chaser] > .tileFace { background-color: var(--chaser); }
.tileForm[data-type=nommer] > .tileFace { background-color: var(--nommer); }
.tileForm[data-type=runner] > .tileFace { background-color: var(--runner); }

/* adds an outline to characters: */
.tileForm[data-type$=er], 
.tileForm[data-type=target] {
  box-shadow: 0 0 0px 0.08em white inset;
}

